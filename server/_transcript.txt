My take on agent frameworks, I'm going to tell you why I think they will. Fail and what to use instead. If you don't know who I am. My name is Dave Fabula. I'm the founder of Data Lumina, and I've been building custom data and AI solutions for the past five years, and next to that, I create educational content like this to help you do. The same and ultimately start freelancing, so. Let's dive into this video. So, with the rise of larsh language models, so called agentic workflows and frameworks became really popular, and as a result, we saw a lot of them pop up. So, for example, if autogen, we have crew, AI and also lan. Lang Chin has a way to build agents. And you have a lot more. And. The problem with all of those frameworks is. That. Most of them. Are probably way too complex for what you're trying to do. And not robust enough for what you're trying to do. So let me explain. All of these tools and all of these frameworks. Are really. Most of them are built around. The core idea. Of. Chaining agents together in a way where they can reason and figure out the next step within some kind of workflow. So here, if you look at the definition, By Lang chain. The core idea of an agent is to use a language model. So an LM to choose a sequence of actions to take. In a chain. So language model is used as a reasoning engine to determine which action to take. Crew. AI follows. A similar approach where. You can very easily design. Agents, you can give them tasks. And I believe there's also this allowed delegation. Parameter that you can fill in. So agents have backstories, roles, goals, and depending on the overall system. They can decide. The next path to take. And the result of that. Is. Really cool and creative in a way that every time you run this. You can get different outcomes. You can get new stories. You can. Build really cool processes for this. But the problem, what I found. Is that most of the processes in the real world right now. That you want to automate for a business, for example. Does not require. That much room for creativity. Actually, mostly it's the other way around. You want to take a process that is very clearly defined. And if it's not defined, You want to define it? And then figure out. The sequence of steps, the sequence of actions. To automate. That workflow, and then. Whenever you need AI to solve a particular step. Within that chain of problems. That is where a large language model comes in. So let's take a look at. This example. So I've been building. 